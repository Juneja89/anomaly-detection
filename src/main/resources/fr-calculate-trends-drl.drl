import com.oaknorth.drools.RatioValue;
import com.oaknorth.drools.Record;
import java.util.List;

rule "calculate overall trend highlight increase positive case"
    when
        record : Record(trend == "increasing", ratioValues.get(2).getSlope() > 0.0)
    then
        List<Integer> anomaly = record.getAnomaly();
        anomaly.add(1);
        modify(record){
            setAnomaly(anomaly);
        }
end

rule "calculate overall trend highlight increase negative case"
    when
        record : Record(trend == "increasing", ratioValues.get(2).getSlope() < 0.0)
    then
        List<Integer> anomaly = record.getAnomaly();
        anomaly.add(0);
        modify(record){
            setAnomaly(anomaly);
        }
end

rule "calculate recent trend highlight decrease positive case"
    when
        record : Record(trend == "decreasing", ratioValues.get(1).getSlope() < 0.0)
    then
        List<Integer> anomaly = record.getAnomaly();
        anomaly.add(1);
        modify(record){
            setAnomaly(anomaly);
        }
end

rule "calculate recent trend highlight decrease negative case"
    when
        record : Record(trend == "decreasing", ratioValues.get(1).getSlope() > 0.0)
    then
        List<Integer> anomaly = record.getAnomaly();
        anomaly.add(0);
        modify(record){
            setAnomaly(anomaly);
        }
end